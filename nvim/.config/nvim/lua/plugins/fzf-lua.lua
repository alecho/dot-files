return {
  {
    "ibhagwan/fzf-lua",
    dependencies = { "nvim-tree/nvim-web-devicons" },
    config = function()
      local actions = require('fzf-lua').actions

      require("fzf-lua").setup {
        winopts = {
          height     = 0.85,
          width      = 0.80,
          row        = 0.35,
          col        = 0.50,
          border     = { '╭', '─', '╮', '│', '╯', '─', '╰', '│' },
          fullscreen = false,
          preview = {
            border       = 'border',
            wrap         = 'nowrap',
            hidden       = 'nohidden',
            vertical     = 'down:45%',
            horizontal   = 'right:60%',
            layout       = 'flex',
            flip_columns = 120,
            title        = true,
            title_pos    = "left",
            scrollbar    = 'float',
            scrolloff    = '-2',
            scrollchars  = { '█', '' },
            delay        = 100,
            winopts      = {
              number         = true,
              relativenumber = false,
              cursorline     = true,
              cursorlineopt  = 'both',
              cursorcolumn   = false,
              signcolumn     = 'no',
              list           = false,
              foldenable     = false,
              foldmethod     = 'manual',
            },
          },
        },
        keymap = {
          builtin = {
            ["<F1>"]     = "toggle-help",
            ["<F2>"]     = "toggle-fullscreen",
            ["<F3>"]     = "toggle-preview-wrap",
            ["<F4>"]     = "toggle-preview",
            ["<F5>"]     = "toggle-preview-ccw",
            ["<F6>"]     = "toggle-preview-cw",
            ["<S-down>"] = "preview-page-down",
            ["<S-up>"]   = "preview-page-up",
            ["<S-left>"] = "preview-page-reset",
          },
          fzf = {
            ["ctrl-z"]     = "abort",
            ["ctrl-u"]     = "unix-line-discard",
            ["ctrl-f"]     = "half-page-down",
            ["ctrl-b"]     = "half-page-up",
            ["ctrl-a"]     = "beginning-of-line",
            ["ctrl-e"]     = "end-of-line",
            ["alt-a"]      = "toggle-all",
            ["f3"]         = "toggle-preview-wrap",
            ["f4"]         = "toggle-preview",
            ["shift-down"] = "preview-page-down",
            ["shift-up"]   = "preview-page-up",
          },
        },
        actions = {
          files = {
            ["default"] = actions.file_edit,
            ["ctrl-s"]  = actions.file_split,
            ["ctrl-v"]  = actions.file_vsplit,
            ["ctrl-t"]  = actions.file_tabedit,
            ["alt-q"]   = actions.file_sel_to_qf,
            ["alt-l"]   = actions.file_sel_to_ll,
          },
          buffers = {
            ["default"] = actions.buf_edit,
            ["ctrl-s"]  = actions.buf_split,
            ["ctrl-v"]  = actions.buf_vsplit,
            ["ctrl-t"]  = actions.buf_tabedit,
          }
        },
        fzf_opts = {
          ['--ansi']   = '',
          ['--info']   = 'inline',
          ['--height'] = '100%',
          ['--layout'] = 'reverse',
          ['--border'] = 'none',
        },
        files = {
          prompt                 = 'Files❯ ',
          multiprocess           = true,
          git_icons              = true,
          file_icons             = true,
          color_icons            = true,
          path_shorten           = 1,
          find_opts              = [[-type f -not -path '*/\.git/*' -printf '%P\n']],
          rg_opts                = "--color=never --files --hidden --follow -g '!.git'",
          fd_opts                = "--color=never --type f --hidden --follow --exclude .git",
          cwd_prompt             = true,
          cwd_prompt_shorten_len = 32,
          cwd_prompt_shorten_val = 1,
        },
        git = {
          files = {
            prompt       = 'GitFiles❯ ',
            cmd          = 'git ls-files --exclude-standard',
            multiprocess = true,
            git_icons    = true,
            file_icons   = true,
            color_icons  = true,
          },
          status = {
            prompt      = 'GitStatus❯ ',
            cmd         = "git -c color.status=false status -s",
            file_icons  = true,
            git_icons   = true,
            color_icons = true,
            previewer   = "git_diff",
          },
        },
        grep = {
          prompt         = 'Rg❯ ',
          input_prompt   = 'Grep For❯ ',
          multiprocess   = true,
          git_icons      = true,
          file_icons     = true,
          color_icons    = true,
          grep_opts      = "--binary-files=without-match --line-number --recursive --color=auto --perl-regexp --hidden",
          rg_opts        = "--column --line-number --no-heading --color=always --smart-case --max-columns=4096 --hidden -g '!.git/'",
        },
      }
    end,
  }
}
