[user]
	name = Andrew Lechowicz
	email = andrew@alecho.com
	signingKey = 1B42243108A704D1
# Zendesk laptop uses the andrew.lechowicz user.
[includeIf "gitdir:**/andrew.lechowicz/"]
	path = config.zendesk
[mergetool]
	keepBackup = true
[help]
	autocorrect = 60
[alias]
	aa = add --all
	amend = commit --amend
	b = branch
	bD = branch -D
	ba = branch -a
	bd = branch -d
	br = branch -r
	c = commit
	ca = commit -a -v
	ci = commit -v
	cm = commit -m
	clear = "!clear"
	close = "!git push && git checkout staging && git branch -D $1"
	co = checkout
	com = checkout main
	cob = "!git checkout $(git remote show origin | grep 'HEAD branch' | sed 's/.*: //')"
	cp = cherry-pick
	cpc = cherry-pick --continue
	di = diff
	diw = diff --word-diff
	dt = difftool
	f = fetch
	fap = fetch --all --prune
	fix = "!f() { ${EDITOR} `git diff --name-only --diff-filter=U`; }; f"
	fixup = commit --fixup
	graph = log --graph --oneline --decorate --all
	gca = gc --aggressive
	l = "!source ~/.bash/helpers/githelpers.sh && pretty_git_log"
	la = !git l --all
	lag = !git l --graph --all
	lg = !git l --graph
	lol = !git log --oneline
	mark-prod = "!git tag production HEAD -f && git push --tags"
	mt = mergetool
	new = checkout -b
	p = push
	pr = pull --rebase
	publish = "!git push -u origin $(git rev-parse --abbrev-ref HEAD)"
	pullall = !git pull && git submodule update --init --recursive
	r = !git l -20
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase -i
	rbs = rebase --skip
	reopen = "!f() { ${EDITOR} $(git status --porcelain | awk '{print $2}'); }; f"
	review = "!git log --oneline origin/main..HEAD && git diff origin/main --word-diff"
	rom = rebase origin/main
	romi = rebase -i origin/main
	s = status -sb
	sh = show
	st = status -b
	staged = diff --staged
	sup = submodule update --init --recursive
	uncommit = reset --soft 'HEAD~'
	undo = reset --soft 'HEAD^'
	whatadded = log --diff-filter=A
	wip = "!git commit -m 'WIP :construction:'"
	worked = "!git for-each-ref --sort=committerdate refs/heads/ --format='%(committerdate:short) %(refname:short)'"
[color]
	ui = auto
[core]
	excludesfile = ~/.gitignore_global
	editor = /usr/local/bin/nvim
[diff]
	algorithm = histogram
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[branch]
	autosetuprebase = always
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[push]
	default = simple
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[rebase]
	autosquash = true
[rerere]
	enabled = 1
[gpg]
	program = gpg
[commit]
	gpgSign = true
[merge "npm-merge-driver"]
	name = automatically merge npm lockfiles
	driver = npx npm-merge-driver merge %A %O %B %P
[init]
	defaultBranch = main
