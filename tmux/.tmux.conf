# My tmux configuration.

# Enable mouse support
set-option -g mouse on

# Server stays alive even when there are no sessions
set-option -g exit-empty off

# make things work like outside of tmux
set -g default-command "reattach-to-user-namespace -l $SHELL"

# Use the shell from $SHELL for zsh
set -g default-shell $SHELL

# use vi mode
setw -g mode-keys vi

# Enable focus events
set -g focus-events on

# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# On window close, renumber the windows
set -g renumber-windows on

# make first window index be 1
set -g base-index 1

# make first pane index be 1
set -g pane-base-index 1

# force reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Split pane horizontal with Ctrl-a -
bind - split-window -v -c "#{pane_current_path}"

# Split pane vertical with Ctrl-a \ #
bind '\' split-window -h -c "#{pane_current_path}"

# Create a new window at the same path as current pane
bind c new-window -c "#{pane_current_path}"

# Select previous window wtih Ctrl-a Ctrl-h
bind -r C-h select-window -t :-

# Select next window wtih Ctrl-a Ctrl-l
bind -r C-l select-window -t :+

# move around panes like in vim
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind h select-pane -L

# resize panes with Ctrl-a Shift-(j,k,h,l)
bind -r J resize-pane -D 20
bind -r K resize-pane -U 20
bind -r L resize-pane -R 20
bind -r H resize-pane -L 20

# Create a new pane from the current window from the prompted window.pane
# Verical
bind-key | command-prompt -p "join pane from:"  "join-pane -h -s ':%%'"
# Horizontal
bind-key _ command-prompt -p "join pane from:"  "join-pane -v -s ':%%'"

# Create a new window from the current pane. Commented because it's a tmux default.
# bind-key ! "break-pane -t :"

# ctrl + shift + [arrow key], no leader necesary
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Open scratchpad in a popup
bind -n M-s popup -E -h 80% -w 80% "tmux new-session -A -s scratchpad 'vim ~/.scratchpad.md'"

# Open self-maintained vim cheatsheet
bind -n M-h popup -E -h 50% -w 50% -x 75% "tmux new-session -A -s vim-cheatsheet 'pandoc -s ~/dot-files/vim/vim_cheat_sheet.md | w3m -T text/html'"

# Make tmux use 256color
set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -ga terminal-overrides ',xterm-256color:RGB'
set -g default-terminal "screen-256color"

# Use mouse scrolling
set-option -g mouse on

# lower repeat timeout
set -g repeat-time 250

# Status bar
set -g status-position top

##CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

# TPM
# To use plugins, install TPM with the command `git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm`
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Dracula Pluggin and config
# available colors: white, gray, dark_gray, light_purple, dark_purple, cyan, green, orange, red, pink, yellow
set -g @plugin 'dracula/tmux'
set -g @dracula-show-left-icon "􀏝  % #S"
set -g @dracula-border-contrast true
set -g @dracula-plugins "battery cpu-usage ram-usage weather time"

## Battery Config
set -g @dracula-battery-label "􀛨"
set -g @dracula-battery-colors "red white"
## CPU Config
set -g @dracula-cpu-usage-label "􀫥 "
set -g @dracula-cpu-usage-colors "orange dark_gray"
## RAM Config
set -g @dracula-ram-usage-label "􀫦  "
set -g @dracula-ram-usage-colors "yellow dark_gray"
## Weather Config
set -g @dracula-show-location false
set -g @dracula-weather-colors "green dark_gray"
## Date & Time Config
set -g @dracula-time-colors "light_purple dark_gray"
set -g @dracula-military-time true

# Start copy mode when scrolling up
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'

# Auto install TPM and plugins.
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
